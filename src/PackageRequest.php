<?php


namespace RWC\Shutterfly;


class PackageRequest
{

    /**
     *  A unique shipment identifier generated by fulfiller; this is the
     * identifier typically fulfillers send in the shipment acknowledgement
     * (shipment per label/package) that Shutterfly receives today there
     * should be a different shipmentNo for each package.
     *
     * @var string
     */
    protected $shipmentNo;

    /**
     * Measured weight of the shipment in ounces.
     *
     * @var float
     */
    protected $weight;

    /**
     * The Shutterfly packaging part number(s) for this package. Can be
     * repeated for packages with multiple packaging.
     *
     * @var string|null
     */
    protected $packagingPartNo;

    /**
     * Optional dimension for generic or non-Shutterfly packages in inches.
     *
     * @var float|null
     */
    protected $height;

    /**
     * Optional dimension for generic or non-Shutterfly packages in inches.
     *
     * @var float|null
     */
    protected $length;

    /**
     * Optional dimension for generic or non-Shutterfly packages in inches
     *
     *@var float|null
     */
    protected $width;

    /**
     * List of shipment items included in this package.
     *
     * @var ShipmentItem[]
     */
    protected $items;

    /**
     * Returns the weight of the package in ounces.
     *
     * @return float Returns the weight of the package in ounces.
     */
    public function getWeight(): float
    {
        return $this->weight;
    }

    /**
     * Sets the weight of the package in ounces.
     *
     * @param float $weight The weight of the package in ounces.
     * @return PackageRequest Returns a fluid interface.
     */
    public function setWeight(float $weight): PackageRequest
    {
        $this->weight = $weight;
        return $this;
    }

    /**
     * Returns the optional packaging part number.
     *
     * @return string|null Returns the optional packaging part number.
     */
    public function getPackagingPartNo(): ?string
    {
        return $this->packagingPartNo;
    }

    /**
     * Sets the optional Shutterfly packaging part number.
     *
     * @param string|null $packagingPartNo The Shutterfly packaging part number.
     * @return PackageRequest Returns a fluid interface.
     */
    public function setPackagingPartNo(?string $packagingPartNo): PackageRequest
    {
        $this->packagingPartNo = $packagingPartNo;
        return $this;
    }

    /**
     * Returns the optional height of the package in inches.
     *
     * @return float|null Returns the optional height of the package in inches.
     */
    public function getHeight(): ?float
    {
        return $this->height;
    }

    /**
     * Sets the optional height of the package in inches.
     *
     * @param float|null $height The height in inches.
     * @return PackageRequest Returns a fluid interface.
     */
    public function setHeight(?float $height): PackageRequest
    {
        $this->height = $height;
        return $this;
    }

    /**
     * Returns the optional length in inches.
     *
     * @return float|null Returns the optional length in inches.
     */
    public function getLength(): ?float
    {
        return $this->length;
    }

    /**
     * Sets the length in inches.
     *
     * @param float|null $length Sets the length in inches.
     * @return PackageRequest Returns a fluid interface.
     */
    public function setLength(?float $length): PackageRequest
    {
        $this->length = $length;
        return $this;
    }

    /**
     * Returns the optional widgth in inches.
     * @return float|null Returns the optional width in inches.
     */
    public function getWidth(): ?float
    {
        return $this->width;
    }

    /**
     * Sets the optional width of the package in inches.
     *
     * @param float|null $width The optional width in inches.
     * @return PackageRequest Returns a fluid interface.
     */
    public function setWidth(?float $width): PackageRequest
    {
        $this->width = $width;
        return $this;
    }

    /**
     * Returns the items included in the package.
     *
     * @return ShipmentItem[] Returns the items included in the package.
     */
    public function getItems(): array
    {
        return $this->items;
    }

    /**
     * Sets items included in the package.
     *
     * @param ShipmentItem[] $items The items included in the package.
     * @return PackageRequest Returns a fluid interface.
     */
    public function setItems(array $items): PackageRequest
    {
        $this->items = $items;
        return $this;
    }

    /**
     * Returns the fulfiller shipment number.
     *
     * @return string Returns the fulfiller shipment number.
     */
    public function getShipmentNo(): string
    {
        return $this->shipmentNo;
    }

    /**
     * Sets the fulfiller shipment number.
     *
     * @param string $shipmentNo The fulfiller shipment number.
     * @return PackageRequest Returns a fluid interface.
     */
    public function setShipmentNo(string $shipmentNo): PackageRequest
    {
        $this->shipmentNo = $shipmentNo;
        return $this;
    }


}